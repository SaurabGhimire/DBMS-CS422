-- a. Total revenue generated by each user
SELECT c.id,c.name,ROUND(SUM(od.quantity * p.unit_price),2) AS total_revenue
FROM customers AS c 
INNER JOIN orders AS o ON c.id = o.customer_id
INNER JOIN orderdetails AS od ON o.id = od.order_id
INNER JOIN products AS p ON od.product_id = p.id
GROUP BY c.id;

-- b. Total revenue generated by each country
select c.id, c.country, ROUND(SUM(p.unit_price * od.quantity),2) as revenue
from customers as c
inner join orders as o on c.id = o.customer_id
inner join orderdetails as od on o.id = od.order_id
inner join products as p on p.id = od.product_id
group by c.id;

-- c. Total revenue by category
select p.category_id,  ROUND(SUM(p.unit_price * od.quantity),2) as revenue
from customers as c
inner join orders as o on c.id = o.customer_id
inner join orderdetails as od on o.id = od.order_id
inner join products as p on p.id = od.product_id
group by p.id;

-- d. Customer who has spent the most amount of money
SELECT c.id, c.name, MAX(ROUND(od.quantity * p.unit_price, 2)) AS max_revenue
FROM customers AS c 
INNER JOIN orders AS o ON c.id = o.customer_id
INNER JOIN orderdetails AS od ON o.id = od.order_id
INNER JOIN products AS p ON od.product_id = p.id
GROUP BY c.id, c.name
ORDER BY max_revenue desc
limit 1;

-- e. Country with the highest average product price
select c.country, AVG(round(od.quantity * p.unit_price, 2)) as average_order_value
from customers as c
inner join orders as o on c.id = o.customer_id 
inner join orderdetails as od on o.id = od.order_id
inner join products as p on p.id = od.product_id
group by c.country
order by average_order_value desc
limit 1;

-- f. Category with the highest average product price
select p.category_id, AVG(round(od.quantity * p.unit_price, 2)) as average_order_value
from customers as c
inner join orders as o on c.id = o.customer_id
inner join orderdetails as od on o.id = od.order_id
inner join products as p on p.id = od.product_id
group by p.category_id
order by average_order_value desc
limit 1; 

-- g. Total quantity of each product that has been ordered
select p.id,p.product_name, sum(od.quantity) as count_orders
from customers c
inner join orders as o on c.id = o.customer_id
inner join orderdetails as od on od.order_id = o.id
inner join products as p on p.id = od.product_id
group by p.id, p.product_name
order by p.id;

-- h. Total quantity of each product that has been ordered by each customer
SELECT c.id, c.name, p.product_name, round(SUM(od.quantity),2) AS count_orders
FROM customers c
INNER JOIN orders AS o ON c.id = o.customer_id
INNER JOIN orderdetails AS od ON od.order_id = o.id
INNER JOIN products AS p ON p.id = od.product_id
GROUP BY c.id, p.id
ORDER BY c.id;

-- i. Total revenue generated by each customer for orders that were shipped to a specific city
SELECT c.id, c.name, o.ship_city, round(SUM(od.quantity * p.unit_price),2) AS revenue
FROM customers c
INNER JOIN orders AS o ON c.id = o.customer_id
INNER JOIN orderdetails AS od ON od.order_id = o.id
INNER JOIN products AS p ON p.id = od.product_id
GROUP BY c.id, o.ship_city
ORDER BY c.id;

--j. Which customers have placed orders for products from more than one category?
SELECT c.id, c.name, count(p.category_id) as category_count
FROM customers c
INNER JOIN orders AS o ON c.id = o.customer_id
INNER JOIN orderdetails AS od ON od.order_id = o.id
INNER JOIN products AS p ON p.id = od.product_id
GROUP BY c.id
having category_count>1
ORDER BY c.id;

--k. Which customers have placed orders for products from a specific category
SELECT p.category_id, c.name
FROM customers c
INNER JOIN orders AS o ON c.id = o.customer_id
INNER JOIN orderdetails AS od ON od.order_id = o.id
INNER JOIN products AS p ON p.id = od.product_id
GROUP BY p.category_id, c.name
order by p.category_id;

--l. Which products have been ordered by customers from a specific country?
SELECT c.country, c.name, p.product_name
FROM customers c
INNER JOIN orders AS o ON c.id = o.customer_id
INNER JOIN orderdetails AS od ON od.order_id = o.id
INNER JOIN products AS p ON p.id = od.product_id
GROUP BY p.product_name, c.country, c.name
order by c.country;

--m. Which customers have ordered the most products?
SELECT c.name, sum(od.quantity) as total_quantity
FROM customers c
INNER JOIN orders AS o ON c.id = o.customer_id
INNER JOIN orderdetails AS od ON od.order_id = o.id
INNER JOIN products AS p ON p.id = od.product_id
GROUP BY c.name
order by total_quantity desc
limit 1;

--n. Which customers have ordered the most expensive products?
SELECT c.name, p.unit_price AS most_expensive
FROM customers c
INNER JOIN orders AS o ON c.id = o.customer_id
INNER JOIN orderdetails AS od ON od.order_id = o.id
INNER JOIN products AS p ON p.id = od.product_id
WHERE p.unit_price = (SELECT MAX(unit_price) FROM products)