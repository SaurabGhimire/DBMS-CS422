-- a. Total revenue generated by each user
SELECT c.id,c.name,ROUND(SUM(od.quantity * p.unit_price),2) AS total_revenue
FROM Customers AS c 
INNER JOIN Orders AS o ON c.id = o.customer_id
INNER JOIN Orderdetails AS od ON o.id = od.order_id
INNER JOIN Products AS p ON od.product_id = p.id
GROUP BY c.id;

-- b. Total revenue generated by each country
SELECT c.id, c.country, ROUND(SUM(p.unit_price * od.quantity),2) AS revenue
FROM Customers AS c
INNER JOIN Orders AS o ON c.id = o.customer_id
INNER JOIN Orderdetails AS od ON o.id = od.order_id
INNER JOIN Products AS p ON p.id = od.product_id
GROUP BY c.id;

-- c. Total revenue by category
SELECT p.category_id,  ROUND(SUM(p.unit_price * od.quantity),2) AS revenue
FROM Customers AS c
INNER JOIN Orders AS o ON c.id = o.customer_id
INNER JOIN Orderdetails AS od ON o.id = od.order_id
INNER JOIN Products AS p ON p.id = od.product_id
GROUP BY p.id;

-- d. Customer who has spent the most amount of money
SELECT c.id, c.name, MAX(ROUND(od.quantity * p.unit_price, 2)) AS max_revenue
FROM Customers AS c 
INNER JOIN Orders AS o ON c.id = o.customer_id
INNER JOIN Orderdetails AS od ON o.id = od.order_id
INNER JOIN Products AS p ON od.product_id = p.id
GROUP BY c.id, c.name
ORDER BY max_revenue DESC
LIMIT 1;

-- e. Country with the highest average product price
SELECT c.country, AVG(ROUND(od.quantity * p.unit_price, 2)) AS average_order_value
FROM Customers AS c
INNER JOIN Orders AS o ON c.id = o.customer_id 
INNER JOIN Orderdetails AS od ON o.id = od.order_id
INNER JOIN Products AS p ON p.id = od.product_id
GROUP BY c.country
ORDER BY average_order_value DESC
LIMIT 1;

-- f. Category with the highest average product price
SELECT p.category_id, AVG(ROUND(od.quantity * p.unit_price, 2)) AS average_order_value
FROM Customers AS c
INNER JOIN Orders AS o ON c.id = o.customer_id
INNER JOIN Orderdetails AS od ON o.id = od.order_id
INNER JOIN Products AS p ON p.id = od.product_id
GROUP BY p.category_id
ORDER BY average_order_value DESC
LIMIT 1; 

-- g. Total quantity of each product that has been ordered
SELECT p.id,p.product_name, SUM(od.quantity) AS count_orders
FROM Customers c
INNER JOIN Orders AS o ON c.id = o.customer_id
INNER JOIN Orderdetails AS od ON od.order_id = o.id
INNER JOIN Products AS p ON p.id = od.product_id
GROUP BY p.id, p.product_name
ORDER BY p.id;

-- h. Total quantity of each product that has been ordered by each customer
SELECT c.id, c.name, p.product_name, ROUND(SUM(od.quantity),2) AS count_orders
FROM Customers c
INNER JOIN Orders AS o ON c.id = o.customer_id
INNER JOIN Orderdetails AS od ON od.order_id = o.id
INNER JOIN Products AS p ON p.id = od.product_id
GROUP BY c.id, p.id
ORDER BY c.id;

-- i. Total revenue generated by each customer for Orders that were shipped to a specific city
SELECT c.id, c.name, o.ship_city, ROUND(SUM(od.quantity * p.unit_price),2) AS revenue
FROM Customers c
INNER JOIN Orders AS o ON c.id = o.customer_id
INNER JOIN Orderdetails AS od ON od.order_id = o.id
INNER JOIN Products AS p ON p.id = od.product_id
GROUP BY c.id, o.ship_city
ORDER BY c.id;

-- j. Which Customers have placed Orders for Products FROM more than one category?
SELECT c.id, c.name, COUNT(p.category_id) AS category_count
FROM Customers c
INNER JOIN Orders AS o ON c.id = o.customer_id
INNER JOIN Orderdetails AS od ON od.order_id = o.id
INNER JOIN Products AS p ON p.id = od.product_id
GROUP BY c.id
having category_count>1
ORDER BY c.id;

-- k. Which Customers have placed Orders for Products FROM a specific category
SELECT p.category_id, c.name
FROM Customers c
INNER JOIN Orders AS o ON c.id = o.customer_id
INNER JOIN Orderdetails AS od ON od.order_id = o.id
INNER JOIN Products AS p ON p.id = od.product_id
GROUP BY p.category_id, c.name
ORDER BY p.category_id;

-- l. Which Products have been ordered by Customers FROM a specific country?
SELECT c.country, c.name, p.product_name
FROM Customers c
INNER JOIN Orders AS o ON c.id = o.customer_id
INNER JOIN Orderdetails AS od ON od.order_id = o.id
INNER JOIN Products AS p ON p.id = od.product_id
GROUP BY p.product_name, c.country, c.name
ORDER BY c.country;

-- m. Which Customers have ordered the most Products?
SELECT c.name, SUM(od.quantity) AS total_quantity
FROM Customers c
INNER JOIN Orders AS o ON c.id = o.customer_id
INNER JOIN Orderdetails AS od ON od.order_id = o.id
INNER JOIN Products AS p ON p.id = od.product_id
GROUP BY c.name
ORDER BY total_quantity DESC
LIMIT 1;

-- n. Which Customers have ordered the most expensive Products?
SELECT c.name, p.unit_price AS most_expensive
FROM Customers c
INNER JOIN Orders AS o ON c.id = o.customer_id
INNER JOIN Orderdetails AS od ON od.order_id = o.id
INNER JOIN Products AS p ON p.id = od.product_id
WHERE p.unit_price = (SELECT MAX(unit_price) FROM Products)